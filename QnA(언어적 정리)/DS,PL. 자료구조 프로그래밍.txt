== 자료구조 ==
Q. 포화(Perfect) 이진트리, 완전(Complete) 이진트리, 정(Full) 이진트리의 차이점에 대해 각각 설명해주세요.
	- 정 이진트리
		리프노드를 제외한 모든 노드가 2개 자식을 가지는 경우입니다.
	- 완전 이진트리
		자식을 갖는 마지막 레벨을 제외한 나머지 노드의 자식 수가 2개여야 한다. 이때 마지막 레벨의 노드는 왼쪽으로 치우쳐져있어야 한다.
	- 포화 이진트리
		모든 리프노드는 같은 레벨이여야 하며, 모든 부모노드는 2개의 자식을 갖는다. 즉, 노드의 레벨이 1이면 2^1-1개 level이 n이면 2^n-1개여야한다.(루트노드는 level 1이라고 가정)


== 프로그래밍 ==
Q. 객체지향 SOLID 원칙에 대해서 설명해 주세요.
	- S (single 책임) 객체는 하나의 기능만 가지며 하나의 책임을 수행하는데 집중해야한다.
	- O (Open Close) 확장에는 Open, 변경에는 Close(기존 구성요소)
	- L (Liscov 치환) interface 형에 구현객체를 생성할 수 있는 것
	- I (Interface 분리원칙) 인터페이스 단일책임 원칙이라고 할 수 있다.(사용하지 않는 인터페이스는 사용 하지 않는것)
	- D (DI 원칙) 의존성 주입
Q. 함수형 프로그래밍에 대해서 설명해 주세요.
	- 선언적 프로그래밍 기법이라고 할 수 있습니다. 

