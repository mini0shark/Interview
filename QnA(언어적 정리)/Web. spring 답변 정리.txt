Q. 스프링이란?
	자바를 사용한 웹 프레임 워크로 서블릿을 개선한 디스패처 서블릿을 프론트 컨트롤러로 활용하여 각각 Model, View, Controller를 사용하는 프레임 워크입니다.
	스프링을 사용하여 개발자가 더욱더 개발에만 신경쓸 수 있게 되었습니다.
Q. 서블릿이란?
	클라이언트의 요청을 처리하고, 그 결과를 반환하는 기술로 동적웹을 처리하기 위한 자바의 웹 프로그래밍 기술입니다.
	서블릿은 Http요청이 오면 Servlet컨테이너가 각 요청에 대해 매핑해놓은 Servlet을 호출하여 각 서블릿에서 서비스를 실행하는데 여기서 doGet, doPost등을 수행하여 로직을 수행하여 반환하는 과정을 거칩니다.

Q. Spring Framework의 생명 주기에 대해서 말해주세요.
	- 컨테이너의 생명주기
		ApplicationContext를 이용해서 객체를 생성하고 스프링 컨테이너 초기화-> 빈 객체 생성, 초기화 및 의존 객체 주입
		close()를 통해 컨테이너 종료-> 빈 객체 소멸
	- 빈 객체 생명주기
		객체 생성 -> 의존 설정 -> 초기화 -> 소멸
		스프링 컨테이너와 함께 생성되고 소멸된다.
	- ex 데이터베이스 커넥션 풀
		- 초기화 과정에서 데이터베이스와 연결 생성 -> 컨테이너 사용 중 연결 유지 -> 빈 객체 소멸 시 연결을 끊어준다.

Q. Bean이란 무엇인가요?
	SpringContainer가 관리하는 자바의 객체입니다.
Q. Container란 무엇인가요?
	Bean을 생성하고 의존성을 주입해주며, 관리하는 그릇이라고 볼 수 있습니다.
Q. Interceptor와 Filter의 차이점을 말해주세요.
	- filter	:	말그대로 요청과 응답을 거른뒤 정제하는 역할을 한다. 스프링 컨텍스트 외부에 존재하여 스프링과 무관한 자원에 대해 동작한다.
	 인코딩을 바꿔 준다거나 ServletRequest 혹은 ServletResponse를 교체할 수 있다. 
	- intercepter :  	요청에 대한 작업 전/후로 가로챈다고 보면 된다. 
		dispatcherServlet이 컨트롤러를 호출하기 전, 후로 끼어들기 때문에 스프링 컨텍스트 내부에서 컨트롤러에 관한 요청과 응답에 대해 처리한다.
	 로그인 체크, 권한체크, 프로그램 실행시간 계산작업 로그확인 등의 업무처리등을 할 수 있다.